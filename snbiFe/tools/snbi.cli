clear("Reset functions")

show("Show running system information") autonomic("Autonomic Networking") interface("Autonomic Interfaces")

show("Show running system information") ip("IP information") interfaces("IP interface status and configuration")

show("Show running system information") process("Active process statistics")

show("Show running system information") snbi("SNBI information") device("Host device")

show("Show running system information") snbi("SNBI information") neighbors("SNBI Neighbors")

show("Show running system information") snbi("SNBI information") intf-db("Interface DB")

snbi("SNBI mode")

#submode "snbi"

quit("Exit from SNBI mode")

discovery("Enable SNBI neighbor discovery")

no("Negate a command") discovery("SNBI neighbor discovery")

interface("SNBI interface") start("Start neighbor discovery")

interface("SNBI interface") stop("Stop neighbor discovery")

start("Enable SNBI protocol")

stop("Disable SNBI protocol")

debug("Debugging functions") log("Modify message logging facilities") console("Enable console logging")
debug("Debugging functions") log("Modify message logging facilities") file("Enable file logging") <STRING:logfile>("Log file name")

debug("Debugging functions") neighbor-discovery("Neighbor discovery debug information") <LIST:all,database,events,packets:type>("Type of debugging") <LIST:info,moderate,sev:level>("Debugging level")
no("Negate a command") debug("Debugging functions") neighbor-discovery("Neighbor discovery debug information") <LIST:all,database,events,packets:type>("Type of debugging") <LIST:info,moderate,sev:level>("Debugging level")

debug("Debugging functions") bootstrap("Bootstrap debug information") <LIST:all,events,packets:type>("Type of debugging") <LIST:info,moderate,sev:level>("Debugging level")
no("Negate a command") debug("Debugging functions") bootstrap("Bootstrap debug information") <LIST:all,events,packets:type>("Type of debugging") <LIST:info,moderate,sev:level>("Debugging level")

#endsubmode

test("Test command") avl-get-firstnode("Get avl first node")

test("Test command") avl-init("Avl init")

test("Test command") avl-insert("Avl insert") <UINT:value>("Integer value")

test("Test command") avl-remove("Avl remove") <UINT:value>("Integer value")

test("Test command") avl-search("Avl search") <UINT:value>("Integer value")

test("Test command") avl-uninit("Avl uninit")

test("Test command") avl-walk("Avl walk")

// Enable privileged mode
enable("Enable") privileged-mode("Privilege mode requires a password")

// Disable privileged mode
+ disable("Disable") privileged-mode("Privilege mode")

quit("Quit the simulator")
